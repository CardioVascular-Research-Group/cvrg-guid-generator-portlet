/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jhu.cvrg.portal.guidgenerator.model.impl;

import com.jhu.cvrg.portal.guidgenerator.model.StudySite;
import com.jhu.cvrg.portal.guidgenerator.model.StudySiteModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the StudySite service. Represents a row in the &quot;JHU_StudySite&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jhu.cvrg.portal.guidgenerator.model.StudySiteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StudySiteImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a study site model instance should use the {@link com.jhu.cvrg.portal.guidgenerator.model.StudySite} interface instead.
 * </p>
 *
 * @author Chris Jurado
 * @see StudySiteImpl
 * @see com.jhu.cvrg.portal.guidgenerator.model.StudySite
 * @see com.jhu.cvrg.portal.guidgenerator.model.StudySiteModel
 * @generated
 */
public class StudySiteModelImpl extends BaseModelImpl<StudySite>
	implements StudySiteModel {
	public static final String TABLE_NAME = "JHU_StudySite";
	public static final Object[][] TABLE_COLUMNS = {
			{ "studySiteId", new Integer(Types.BIGINT) },
			{ "studyId", new Integer(Types.BIGINT) },
			{ "siteId", new Integer(Types.BIGINT) },
			{ "linkingDirection", new Integer(Types.INTEGER) }
		};
	public static final String TABLE_SQL_CREATE = "create table JHU_StudySite (studySiteId LONG not null primary key,studyId LONG,siteId LONG,linkingDirection INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table JHU_StudySite";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jhu.cvrg.portal.guidgenerator.model.StudySite"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jhu.cvrg.portal.guidgenerator.model.StudySite"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jhu.cvrg.portal.guidgenerator.model.StudySite"));

	public StudySiteModelImpl() {
	}

	public long getPrimaryKey() {
		return _studySiteId;
	}

	public void setPrimaryKey(long pk) {
		setStudySiteId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_studySiteId);
	}

	public long getStudySiteId() {
		return _studySiteId;
	}

	public void setStudySiteId(long studySiteId) {
		_studySiteId = studySiteId;
	}

	public long getStudyId() {
		return _studyId;
	}

	public void setStudyId(long studyId) {
		_studyId = studyId;
	}

	public long getSiteId() {
		return _siteId;
	}

	public void setSiteId(long siteId) {
		_siteId = siteId;
	}

	public int getLinkingDirection() {
		return _linkingDirection;
	}

	public void setLinkingDirection(int linkingDirection) {
		_linkingDirection = linkingDirection;
	}

	public StudySite toEscapedModel() {
		if (isEscapedModel()) {
			return (StudySite)this;
		}
		else {
			return (StudySite)Proxy.newProxyInstance(StudySite.class.getClassLoader(),
				new Class[] { StudySite.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					StudySite.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		StudySiteImpl studySiteImpl = new StudySiteImpl();

		studySiteImpl.setStudySiteId(getStudySiteId());

		studySiteImpl.setStudyId(getStudyId());

		studySiteImpl.setSiteId(getSiteId());

		studySiteImpl.setLinkingDirection(getLinkingDirection());

		return studySiteImpl;
	}

	public int compareTo(StudySite studySite) {
		long pk = studySite.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		StudySite studySite = null;

		try {
			studySite = (StudySite)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = studySite.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{studySiteId=");
		sb.append(getStudySiteId());
		sb.append(", studyId=");
		sb.append(getStudyId());
		sb.append(", siteId=");
		sb.append(getSiteId());
		sb.append(", linkingDirection=");
		sb.append(getLinkingDirection());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.jhu.cvrg.portal.guidgenerator.model.StudySite");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>studySiteId</column-name><column-value><![CDATA[");
		sb.append(getStudySiteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>studyId</column-name><column-value><![CDATA[");
		sb.append(getStudyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>siteId</column-name><column-value><![CDATA[");
		sb.append(getSiteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkingDirection</column-name><column-value><![CDATA[");
		sb.append(getLinkingDirection());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _studySiteId;
	private long _studyId;
	private long _siteId;
	private int _linkingDirection;
	private transient ExpandoBridge _expandoBridge;
}